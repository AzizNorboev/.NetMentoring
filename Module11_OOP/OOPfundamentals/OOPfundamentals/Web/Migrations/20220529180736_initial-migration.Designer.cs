// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OOPfundamentals;
using Web;

namespace Web.Migrations
{
    [DbContext(typeof(DocumentDbContext))]
    [Migration("20220529180736_initial-migration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("OOPfundamentals.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("DocumentAuthorsId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentAuthorsId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DocumentAuthorsId = 1,
                            Name = "Douglas Adams"
                        },
                        new
                        {
                            Id = 2,
                            DocumentAuthorsId = 1,
                            Name = "Eoin Colfer"
                        },
                        new
                        {
                            Id = 3,
                            DocumentAuthorsId = 1,
                            Name = "Thomas Tidholm"
                        },
                        new
                        {
                            Id = 4,
                            DocumentAuthorsId = 2,
                            Name = "Douglas Adams"
                        },
                        new
                        {
                            Id = 5,
                            DocumentAuthorsId = 3,
                            Name = "Author Patent"
                        });
                });

            modelBuilder.Entity("OOPfundamentals.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DatePublished")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Documents");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Document");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            DatePublished = new DateTime(2022, 5, 29, 23, 7, 36, 276, DateTimeKind.Local).AddTicks(4555),
                            Title = "Document Title"
                        });
                });

            modelBuilder.Entity("OOPfundamentals.Models.DocumentAuthors", b =>
                {
                    b.HasBaseType("OOPfundamentals.Models.Document");

                    b.HasDiscriminator().HasValue("DocumentAuthors");
                });

            modelBuilder.Entity("OOPfundamentals.Models.Magazine", b =>
                {
                    b.HasBaseType("OOPfundamentals.Models.Document");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Magazine_Publisher");

                    b.HasDiscriminator().HasValue("Magazine");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            DatePublished = new DateTime(2022, 5, 29, 23, 7, 36, 276, DateTimeKind.Local).AddTicks(5775),
                            Title = "Magazine Title",
                            Publisher = "Mazagine Publisher"
                        });
                });

            modelBuilder.Entity("OOPfundamentals.Models.Book", b =>
                {
                    b.HasBaseType("OOPfundamentals.Models.DocumentAuthors");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DatePublished = new DateTime(2022, 5, 29, 23, 7, 36, 275, DateTimeKind.Local).AddTicks(6336),
                            Title = "Hitchhiker's guide to the galaxy",
                            ISBN = "12-34-56-78-90",
                            NumberOfPages = 450,
                            Publisher = "Publisher"
                        });
                });

            modelBuilder.Entity("OOPfundamentals.Models.Patent", b =>
                {
                    b.HasBaseType("OOPfundamentals.Models.DocumentAuthors");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Patent");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            DatePublished = new DateTime(2022, 5, 29, 23, 7, 36, 276, DateTimeKind.Local).AddTicks(6354),
                            Title = "Patent",
                            ExpirationDate = new DateTime(2025, 5, 29, 23, 7, 36, 276, DateTimeKind.Local).AddTicks(6358)
                        });
                });

            modelBuilder.Entity("OOPfundamentals.Models.LocalizedBook", b =>
                {
                    b.HasBaseType("OOPfundamentals.Models.Book");

                    b.Property<string>("CountryOfLocalization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalPublisher")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("LocalizedBook");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            DatePublished = new DateTime(2022, 5, 29, 23, 7, 36, 276, DateTimeKind.Local).AddTicks(4942),
                            Title = "The silence of the Lambs",
                            ISBN = "09-87-65-43-21",
                            NumberOfPages = 464,
                            Publisher = "Localize Publisher",
                            CountryOfLocalization = "Uzbekistan",
                            LocalPublisher = "localPublisher"
                        });
                });

            modelBuilder.Entity("OOPfundamentals.Models.Author", b =>
                {
                    b.HasOne("OOPfundamentals.Models.DocumentAuthors", "Document")
                        .WithMany("Authors")
                        .HasForeignKey("DocumentAuthorsId");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("OOPfundamentals.Models.DocumentAuthors", b =>
                {
                    b.Navigation("Authors");
                });
#pragma warning restore 612, 618
        }
    }
}
