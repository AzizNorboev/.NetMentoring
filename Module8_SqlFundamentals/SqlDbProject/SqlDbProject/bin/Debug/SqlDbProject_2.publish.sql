/*
Deployment script for SqlIntroMentoring

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SqlIntroMentoring"
:setvar DefaultFilePrefix "SqlIntroMentoring"
:setvar DefaultDataPath "C:\Users\Aziz_Norboev\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Aziz_Norboev\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating Procedure [dbo].[SP_InsertEmployeeInfo]...';


GO
-- TASK 3 Stored Procedure
CREATE PROCEDURE SP_InsertEmployeeInfo 
@EmployeeName nvarchar(100) = NULL, 
@FirstName nvarchar(50),
@LastName nvarchar(50),
@CompanyName nvarchar(20),
@Position nvarchar(50) = NULL,
@Street nvarchar(50),
@City nvarchar(20) = NULL,
@State nvarchar(50) = NULL,
@ZipCode nvarchar(50) = NULL
AS
 DECLARE @AddressId INT;
 DECLARE @PersonId INT;

 INSERT INTO Address values(@Street, @City, @State, @ZipCode) SET @AddressId = @@IDENTITY;
 INSERT INTO Person(FirstName, LastName) values(@FirstName, @LastName) SET @PersonId = @@IDENTITY;

 INSERT INTO Employee(AddressId, PersonId, CompanyName, Position, EmployeeName) values(@AddressId, @PersonId, @CompanyName, @Position, @EmployeeName);
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

Insert into Person(FirstName, LastName) values ('Jack', 'Sparrow')
Insert into Person(FirstName, LastName) values ('Aziz', 'Norboev')
Insert into Person(FirstName, LastName) values ('Sherlok', 'Holmes')

insert into Address(Street, City, State, Zipcode) values('Boston Street', 'Boston', 'Massachusetts', '456')
insert into Address(Street, City, State, Zipcode) values('Portland Street', 'Portland', 'Oregon', '395')
insert into Address(Street, City, State, Zipcode) values('Baker Street', 'London', 'The UK', '712')


insert into Company(Name, AddressId) values('Company 1', 1)
insert into Company(Name, AddressId) values('Company 2', 2)
insert into Company(Name, AddressId) values('Company 3', 3)

insert into Employee(AddressId, PersonId, CompanyName, Position, EmployeeName) values(1, 1, 'Company 1', 'developer', 'Jack-Sparrow')
insert into Employee(AddressId, PersonId, CompanyName, Position, EmployeeName) values(2, 2, 'Company 2', 'manager', 'John-Wick')
insert into Employee(AddressId, PersonId, CompanyName, Position, EmployeeName) values(3, 3, 'Company 3', 'QA engineer', 'David Smith')
GO

GO
PRINT N'Update complete.';


GO
